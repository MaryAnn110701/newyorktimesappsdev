{"mappings":"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","sources":["<anon>","src/script.js"],"sourcesContent":["const apiKey = \"k8XrW9L8Us9nRH4XHw7KlYH6s47A3uaV\"; // Your API key\nconst newsContainer = document.getElementById(\"news-container\");\nconst searchField = document.getElementById(\"searchField\");\nconst homeLink = document.getElementById(\"homeLink\");\nconst newsLink = document.getElementById(\"newsLink\");\nconst booksLink = document.getElementById(\"booksLink\");\nasync function fetchData(query = \"\") {\n    try {\n        const apiURL = `https://api.nytimes.com/svc/topstories/v2/world.json?api-key=${apiKey}`;\n        const response = await fetch(apiURL);\n        if (!response.ok) throw new Error(\"Network response was not ok: \" + response.statusText);\n        const data = await response.json();\n        displayArticles(data.results, query, \"topStories\");\n    } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        newsContainer.innerHTML = \"<p>Unable to fetch news. Please try again later.</p>\";\n    }\n}\nasync function fetchMostPopularData(query = \"\") {\n    try {\n        const apiURL = `https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?api-key=${apiKey}`;\n        const response = await fetch(apiURL);\n        if (!response.ok) throw new Error(\"Network response was not ok: \" + response.statusText);\n        const data = await response.json();\n        displayArticles(data.results, query, \"mostPopular\");\n    } catch (error) {\n        console.error(\"Error fetching most popular data:\", error);\n        newsContainer.innerHTML = \"<p>Unable to fetch news. Please try again later.</p>\";\n    }\n}\nasync function fetchBooks() {\n    try {\n        const apiURL = `https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=${apiKey}`;\n        const response = await fetch(apiURL);\n        if (!response.ok) throw new Error(\"Network response was not ok: \" + response.statusText);\n        const data = await response.json();\n        if (data.results && data.results.books.length > 0) displayBooks(data.results.books);\n        else newsContainer.innerHTML = \"<p>No books found.</p>\";\n    } catch (error) {\n        console.error(\"Error fetching books data:\", error);\n        newsContainer.innerHTML = \"<p>Unable to fetch books. Please try again later.</p>\";\n    }\n}\nfunction displayArticles(articles, query, type) {\n    newsContainer.innerHTML = \"\";\n    const filteredArticles = articles.filter((item)=>{\n        const hasImage = type === \"topStories\" && item.multimedia && item.multimedia.length > 0 || type === \"mostPopular\" && item.media && item.media.length > 0; // Check for images based on type\n        const matchesQuery = item.title.toLowerCase().includes(query.toLowerCase()) || item.abstract.toLowerCase().includes(query.toLowerCase());\n        return hasImage && matchesQuery;\n    });\n    filteredArticles.forEach((item)=>{\n        const newsItem = document.createElement(\"div\");\n        newsItem.classList.add(\"news-item\");\n        let imageHTML = \"\";\n        if (type === \"topStories\") {\n            const photo = item.multimedia && item.multimedia.length > 0 ? item.multimedia[0] : null;\n            imageHTML = photo ? `<img src=\"${photo.url}\" alt=\"${item.title}\" class=\"news-image\">` : '<img src=\"https://via.placeholder.com/300\" alt=\"Placeholder Image\" class=\"news-image\">';\n        } else if (type === \"mostPopular\") {\n            const media = item.media && item.media.length > 0 ? item.media[0] : null;\n            imageHTML = media ? `<img src=\"${media[\"media-metadata\"][0].url}\" alt=\"${item.title}\" class=\"news-image\">` : '<img src=\"https://via.placeholder.com/300\" alt=\"Placeholder Image\" class=\"news-image\">';\n        }\n        newsItem.innerHTML = `\r\n            ${imageHTML}\r\n            <h2>${item.title}</h2>\r\n            <p>${item.abstract}</p>\r\n            <a href=\"${item.url}\" target=\"_blank\">Read more</a>\r\n        `;\n        newsContainer.appendChild(newsItem);\n    });\n}\nfunction displayBooks(books) {\n    newsContainer.innerHTML = \"\";\n    books.forEach((book)=>{\n        const bookItem = document.createElement(\"div\");\n        bookItem.classList.add(\"news-item\");\n        // Create an image element for the book cover\n        const imageHTML = book.book_image ? `<img src=\"${book.book_image}\" alt=\"${book.title}\" class=\"news-image\">` : \"<p>No image available.</p>\";\n        bookItem.innerHTML = `\r\n            ${imageHTML}\r\n            <h2>${book.title}</h2>\r\n            <p>Author: ${book.author}</p>\r\n            <p>Publisher: ${book.publisher}</p>\r\n            <a href=\"${book.amazon_product_url}\" target=\"_blank\">Buy on Amazon</a>\r\n        `;\n        newsContainer.appendChild(bookItem);\n    });\n}\nsearchField.addEventListener(\"input\", (event)=>{\n    const query = event.target.value.trim();\n    fetchData(query);\n});\nhomeLink.addEventListener(\"click\", (event)=>{\n    event.preventDefault();\n    fetchData();\n});\nnewsLink.addEventListener(\"click\", (event)=>{\n    event.preventDefault();\n    fetchMostPopularData();\n});\nbooksLink.addEventListener(\"click\", (event)=>{\n    event.preventDefault();\n    fetchBooks();\n});\nfetchData();\n\n//# sourceMappingURL=index.a4d075f8.js.map\n","const apiKey = \"k8XrW9L8Us9nRH4XHw7KlYH6s47A3uaV\"; // Your API key\r\nconst newsContainer = document.getElementById(\"news-container\");\r\nconst searchField = document.getElementById(\"searchField\");\r\nconst homeLink = document.getElementById(\"homeLink\");\r\nconst newsLink = document.getElementById(\"newsLink\"); \r\nconst booksLink = document.getElementById(\"booksLink\");\r\n\r\nasync function fetchData(query = \"\") {\r\n    try {\r\n        const apiURL = `https://api.nytimes.com/svc/topstories/v2/world.json?api-key=${apiKey}`;\r\n        const response = await fetch(apiURL);\r\n        \r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok: \" + response.statusText);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        displayArticles(data.results, query, 'topStories'); \r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        newsContainer.innerHTML = \"<p>Unable to fetch news. Please try again later.</p>\";\r\n    }\r\n}\r\n\r\nasync function fetchMostPopularData(query = \"\") {\r\n    try {\r\n        const apiURL = `https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?api-key=${apiKey}`;\r\n        const response = await fetch(apiURL);\r\n        \r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok: \" + response.statusText);\r\n        }\r\n\r\n        const data = await response.json();\r\n        displayArticles(data.results, query, 'mostPopular');\r\n    } catch (error) {\r\n        console.error(\"Error fetching most popular data:\", error);\r\n        newsContainer.innerHTML = \"<p>Unable to fetch news. Please try again later.</p>\";\r\n    }\r\n}\r\n\r\nasync function fetchBooks() {\r\n    try {\r\n        const apiURL = `https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=${apiKey}`;\r\n        const response = await fetch(apiURL);\r\n        \r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok: \" + response.statusText);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.results && data.results.books.length > 0) {\r\n            displayBooks(data.results.books);\r\n        } else {\r\n            newsContainer.innerHTML = \"<p>No books found.</p>\";\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error fetching books data:\", error);\r\n        newsContainer.innerHTML = \"<p>Unable to fetch books. Please try again later.</p>\";\r\n    }\r\n}\r\n\r\nfunction displayArticles(articles, query, type) {\r\n    newsContainer.innerHTML = \"\"; \r\n\r\n    const filteredArticles = articles.filter(item => {\r\n        const hasImage = (type === 'topStories' && item.multimedia && item.multimedia.length > 0) ||\r\n                         (type === 'mostPopular' && item.media && item.media.length > 0); // Check for images based on type\r\n        const matchesQuery = item.title.toLowerCase().includes(query.toLowerCase()) || \r\n                             item.abstract.toLowerCase().includes(query.toLowerCase());\r\n        return hasImage && matchesQuery;\r\n    });\r\n\r\n    filteredArticles.forEach(item => {\r\n        const newsItem = document.createElement('div');\r\n        newsItem.classList.add('news-item');\r\n\r\n        let imageHTML = '';\r\n        if (type === 'topStories') {\r\n            const photo = item.multimedia && item.multimedia.length > 0 ? item.multimedia[0] : null;\r\n            imageHTML = photo ? `<img src=\"${photo.url}\" alt=\"${item.title}\" class=\"news-image\">` : '<img src=\"https://via.placeholder.com/300\" alt=\"Placeholder Image\" class=\"news-image\">';\r\n        } else if (type === 'mostPopular') {\r\n            const media = item.media && item.media.length > 0 ? item.media[0] : null;\r\n            imageHTML = media ? `<img src=\"${media['media-metadata'][0].url}\" alt=\"${item.title}\" class=\"news-image\">` : '<img src=\"https://via.placeholder.com/300\" alt=\"Placeholder Image\" class=\"news-image\">';\r\n        }\r\n\r\n        newsItem.innerHTML = `\r\n            ${imageHTML}\r\n            <h2>${item.title}</h2>\r\n            <p>${item.abstract}</p>\r\n            <a href=\"${item.url}\" target=\"_blank\">Read more</a>\r\n        `;\r\n        newsContainer.appendChild(newsItem);\r\n    });\r\n}\r\n\r\nfunction displayBooks(books) {\r\n    newsContainer.innerHTML = \"\"; \r\n\r\n    books.forEach(book => {\r\n        const bookItem = document.createElement('div');\r\n        bookItem.classList.add('news-item');\r\n\r\n        // Create an image element for the book cover\r\n        const imageHTML = book.book_image ? `<img src=\"${book.book_image}\" alt=\"${book.title}\" class=\"news-image\">` : '<p>No image available.</p>';\r\n\r\n        bookItem.innerHTML = `\r\n            ${imageHTML}\r\n            <h2>${book.title}</h2>\r\n            <p>Author: ${book.author}</p>\r\n            <p>Publisher: ${book.publisher}</p>\r\n            <a href=\"${book.amazon_product_url}\" target=\"_blank\">Buy on Amazon</a>\r\n        `;\r\n        newsContainer.appendChild(bookItem);\r\n    });\r\n}\r\n\r\nsearchField.addEventListener(\"input\", (event) => {\r\n    const query = event.target.value.trim();\r\n    fetchData(query); \r\n});\r\n\r\nhomeLink.addEventListener(\"click\", (event) => {\r\n    event.preventDefault(); \r\n    fetchData(); \r\n});\r\n\r\nnewsLink.addEventListener(\"click\", (event) => {\r\n    event.preventDefault();\r\n    fetchMostPopularData(); \r\n});\r\n\r\nbooksLink.addEventListener(\"click\", (event) => {\r\n    event.preventDefault(); \r\n    fetchBooks(); \r\n});\r\n\r\n\r\nfetchData();\r\n"],"names":["apiKey","newsContainer","document","getElementById","searchField","homeLink","newsLink","booksLink","fetchData","query","apiURL","response","fetch","ok","Error","statusText","data","json","displayArticles","results","error","console","innerHTML","fetchMostPopularData","fetchBooks","books","length","forEach","book","bookItem","createElement","classList","add","imageHTML","book_image","title","author","publisher","amazon_product_url","appendChild","articles","type","filteredArticles","filter","item","hasImage","multimedia","media","matchesQuery","toLowerCase","includes","abstract","newsItem","photo","url","addEventListener","event","target","value","trim","preventDefault"],"version":3,"file":"index.a4d075f8.js.map"}